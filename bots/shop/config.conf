# we're a serviceprovider - this provides us with some
# stuff primarily to do with honorifics and gender.

inherit serviceprovider

# put the parent substitutions first (and only) in the subst sequence

subs parent


# top priority - the core stuff, mainly does debugging

topics { core_top }

# then our main topics, the service topics and so on.

topics { main servicemain core_reductions core_main }

# then our catchall topics

topics { catchall }

# finally the core catchall topics.

topics { core_catchall }

# no actual topics in here, just functions to do with events.

topics { events }

# shop types
include "default.conf"


# this is how we change the shop type - we call
# this from the console with /ccz setparam shop <name>
# and it will find a function "shoptype_"+name and call it.
# In turn, this should set the default shop first and then
# override various things in it.

:SETPARAM |v,k:|
    cases
        ?k "shop" = if
            "shoptype_" ?v + dup dp call
            "shop type set".
        case
    "Unrecognised shop parameter " ?k + otherwise
;


init 
    shoptype_default
    "SHOP INIT RUNNING" dp
;
